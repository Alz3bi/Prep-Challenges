{
    "cells": [
        {
            "language": "markdown",
            "source": [
                "## Hacker Rank\n\nFor Thursdays you will be solving some selected challenges on HackerRank, please create an account if you don't have then\nFollow the links below:\nread them carefully and solve them then copy-paste your solution below in Code Block"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "### **Required**:"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "#####  [Birthday Cake Candles](https://www.hackerrank.com/challenges/birthday-cake-candles/problem?isFullScreen=true)\n\nSolution:"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "let max = candles[0];\nlet counter = 0;\nfor(let i = 1;i < candles.length;i++){\n    if(candles[i]>max){\n        max = candles[i]\n    }\n}\nfor(let i = 0;i<candles.length;i++){\n    if(candles[i] == max){\n        counter++;\n    }\n}\nreturn counter;"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.error",
                            "value": {
                                "name": "ReferenceError",
                                "message": "candles is not defined",
                                "stack": "    at <Cell 4> [1, 0]\n    at <Cell 4> [16, 46]\n    at Script.runInContext (node:vm:133:12)\n    at Script.runInNewContext (node:vm:138:17)\n    at Object.runInNewContext (node:vm:296:38)\n    at C (/home/student/.vscode-server/extensions/donjayamanne.typescript-notebook-2.0.6/out/extension/server/index.js:2:113345)\n    at t.execCode (/home/student/.vscode-server/extensions/donjayamanne.typescript-notebook-2.0.6/out/extension/server/index.js:2:114312)\n    at k.<anonymous> (/home/student/.vscode-server/extensions/donjayamanne.typescript-notebook-2.0.6/out/extension/server/index.js:2:142156)\n    at k.emit (node:events:518:28)\n    at k.emit (node:domain:488:12)"
                            }
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "### **Optional**:"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "#####  [Compare The Triplets](https://www.hackerrank.com/challenges/compare-the-triplets/problem?isFullScreen=true)\n\nSolution:"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "let scores = [0, 0]\n    for(let i = 0;i < 3;i++){\n        if(a[i] > b[i]){\n            scores[0]++;\n        }else if(a[i] < b[i]){\n            scores[1]++;\n        }\n    }\n    return scores;"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "#####  [Migratory Birds](https://www.hackerrank.com/challenges/migratory-birds/problem?isFullScreen=true)\n\nSolution:"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "let counter = {};\n    for(let i = 0;i<arr.length;i++){\n        let temp = arr[i]\n        if(!counter.hasOwnProperty(temp)){\n            counter[temp] = 0;\n        }\n        \n        for(let x in counter){\n            if(arr[i] == x){\n                counter[x]++;\n            }\n        }\n    }\n    \n    let value = 0;\n    let index = 0;\n    \n    for(let i in counter){\n        if(counter[i] > value){\n            index = i\n            value = counter[i]\n        }\n    }\n    for(let i in counter){\n        if(counter[i] == value && i < index){\n            index = i\n        }\n    }\n    return index"
            ],
            "outputs": []
        }
    ]
}